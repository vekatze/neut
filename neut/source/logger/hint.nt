import {
  core.int.show {show-int},
}

data hint {
| Hint(
    file-path: &text,
    line: int,
    column: int,
    should-save-location: bool,
  )
| Saved-Hint(
    file-path: text,
    line: int,
    column: int,
    should-save-location: bool,
  )
}

define quote-hint(m: hint): meta hint {
  match m {
  | Hint(path, line, column, should-save-location) =>
    box {
      letbox path = box path {path};
      letbox line = quote {line};
      letbox column = quote {column};
      letbox should-save-location = quote {should-save-location};
      Saved-Hint(path, line, column, should-save-location)
    }
  | Saved-Hint(a, b, c, d) =>
    box {
      letbox a = quote {a};
      letbox b = quote {b};
      letbox c = quote {c};
      letbox d = quote {d};
      Saved-Hint(a, b, c, d)
    }
  }
}

define get-line(m: &hint): int {
  case m {
  | Hint of {line} =>
    *line
  | Saved-Hint of {line} =>
    *line
  }
}

define get-column(m: &hint): int {
  case m {
  | Hint of {column} =>
    *column
  | Saved-Hint of {column} =>
    *column
  }
}

define get-file-path(m: &hint): &text {
  case m {
  | Hint of {file-path} =>
    *file-path
  | Saved-Hint of {file-path} =>
    file-path
  }
}

define get-should-save-location(m: &hint): bool {
  case m {
  | Hint of {should-save-location} =>
    *should-save-location
  | Saved-Hint of {should-save-location} =>
    *should-save-location
  }
}

define new-hint(line: int, column: int, file-path: &text): hint {
  Hint of {
    file-path,
    line,
    column,
    should-save-location := True,
  }
}

define blur(m: hint): hint {
  match m {
  | Hint of {file-path, line, column} =>
    Hint of {
      file-path,
      line,
      column,
      should-save-location := False,
    }
  | Saved-Hint of {file-path, line, column} =>
    Saved-Hint of {
      file-path,
      line,
      column,
      should-save-location := False,
    }
  }
}

inline internal-hint: hint {
  Hint of {
    file-path := "",
    line := 1,
    column := 1,
    should-save-location := False,
  }
}

define new-source-hint-N(file-path: &text): hint {
  new-hint(1, 1, file-path)
}

define new-source-hint(file-path: text): hint {
  Saved-Hint of {
    file-path,
    line := 1,
    column := 1,
    should-save-location := True,
  }
}

define show-file-pos(m: &hint): text {
  case m {
  | Hint of {file-path, line, column} =>
    pin line-text = show-int(*line);
    pin column-text = show-int(*column);
    pin xs = List[**file-path, *":", *line-text, *":", *column-text];
    core.text.join-N(xs)
  | Saved-Hint of {file-path, line, column} =>
    pin line-text = show-int(*line);
    pin column-text = show-int(*column);
    pin xs = List[*file-path, *":", *line-text, *":", *column-text];
    core.text.join-N(xs)
  }
}

define zen(): unit {
  pin m = new-hint(12, 3456, "/Users/foo/path/to/file.nt");
  vet(m)
  // printf("{}\n", List[show-file-pos(m)])
}
