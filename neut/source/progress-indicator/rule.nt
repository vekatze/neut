import {
  core.ansi {style},
}

data progress-indicator {
| _Progress-Indicator(
    working-title: text,
    completed-title: text,
    color: vector(style),
    progress: ?pair(int, int),
  )
}

inline frame: type {
  int
}

define _choose-spinner(i: int): &text {
  match i {
  | 0 =>
    "⠋"
  | 1 =>
    "⠙"
  | 2 =>
    "⠹"
  | 3 =>
    "⠸"
  | 4 =>
    "⠼"
  | 5 =>
    "⠴"
  | 6 =>
    "⠦"
  | 7 =>
    "⠧"
  | 8 =>
    "⠇"
  | _ =>
    "⠏"
  }
}

define _bar-length: int {
  32
}

define _bar-in-progress: &text {
  " "
}

define _bar-finished: &text {
  "━"
}

define next(p: progress-indicator): progress-indicator {
  let _Progress-Indicator of {working-title, completed-title, color, progress} = p;
  match progress {
  | Left(_) =>
    let progress = none;
    _Progress-Indicator of {working-title, completed-title, color, progress}
  | Right(Pair(i, count)) =>
    let progress = Right(Pair(add-int(i, 1), count));
    _Progress-Indicator of {working-title, completed-title, color, progress}
  }
}
