import {
  this.language.common.binder {Binder-F, binder-f},
  this.language.term.term {Tau, term, term-f},
  this.logger.hint {hint, internal-hint},
}

inline _m: hint {
  internal-hint
}

define extend(e: term-f(unit)): term {
  match e {
  | Tau(_) =>
    Tau(_m)
  }
}

define extend-binder(b: binder-f(term-f(unit))): binder-f(term) {
  let Binder-F(m, x, t) = b;
  Binder-F(m, x, extend(t))
}
