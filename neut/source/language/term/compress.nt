import {
  this.language.common.binder {Binder-F, binder-f},
  this.language.term.term {Tau, term, term-f},
}

define compress(e: term): term-f(unit) {
  match e {
  | Tau(_) =>
    Tau(Unit)
  }
}

define compress-binder(b: binder-f(term)): binder-f(term-f(unit)) {
  let Binder-F(m, x, t) = b;
  Binder-F(m, x, compress(t))
}
