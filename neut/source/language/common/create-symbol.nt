import {
  core.int.show {show-int},
  this.gensym.gensym {gensym-kit, make-gensym-kit, new-count},
  this.language.common.const {hole-var-prefix},
  this.language.common.ident {I, ident},
}

inline new-text-for-hole(k: &gensym-kit): text {
  let i = new-count(k);
  pin i = show-int(i);
  pin tmp = core.text.append(hole-var-prefix, ";");
  core.text.append(tmp, i)
}

inline new-ident-from-text(k: &gensym-kit, s: text): ident {
  let i = new-count(k);
  I(s, i)
}

inline new-text(k: &gensym-kit): text {
  new-text-for-hole(k)
}

inline new-ident-from-ident(k: &gensym-kit, x: &ident): ident {
  tie I(s, _) = x;
  new-ident-from-text(k, *s)
}

define zen(): unit {
  pin k = make-gensym-kit();
  pin v = new-text-for-hole(k);
  vet(v)
}
