import {
  this.syntax-tree.comment {comment},
}

data separator {
| Comma
| Bar
}

data container {
| Paren
| Brace
| Bracket
| Angle
}

inline prefix: type {
  ?pair(text, comment)
}

data series(a) {
| Series(
    elems: list(pair(comment, a)),
    trailing-comment: comment,
    prefix: prefix,
    container: ?container,
    separator: separator,
    has-optional-separator: bool,
  )
}

inline for-each<a, b>(xs: series(a), f: (a) -> b): series(b) {
  let Series of {elems, trailing-comment, prefix, container, separator, has-optional-separator} = xs;
  let elems =
    core.list.for-each(elems, function (p) {
      let Pair(c, val) = p;
      let val = f(val);
      Pair(c, val)
    });
  Series of {elems, trailing-comment, prefix, container, separator, has-optional-separator}
}
