import {
  core.dictionary {dictionary},
  core.text.eq {eq-prefix},
  this.kernel.common.const {hole-var-prefix},
  this.kernel.common.module {main-module},
  this.language.common.definite-description {definite-description},
  this.language.common.is-const-like {is-const-like},
  this.language.raw-term.key {key},
}

inline exp-key: type {
  key
}

inline imp-key: type {
  key
}

data _key-arg-value {
| _Key-Arg-Value(is-const-like, list(imp-key), list(exp-key))
}

data key-arg-kit {
| _Key-Arg-Kit(
    main-module: main-module,
    key-arg-map-cell: cell(dictionary(definite-description, _key-arg-value)),
  )
}

define _is-hole(k: &key): bool {
  eq-prefix(k, hole-var-prefix)
}
