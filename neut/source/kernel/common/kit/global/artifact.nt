import {
  core.cell {make-cell},
  core.dictionary {dictionary},
  this.kernel.common.artifact {artifact-time},
}

data artifact-kit {
| _Artifact-Kit(
    artifact-map-ref: cell(dictionary(text, artifact-time)),
  )
}

define make-artifact-kit(): artifact-kit {
  let artifact-map-ref = make-cell(box {core.dictionary.empty});
  _Artifact-Kit of {artifact-map-ref}
}

define insert(k: &artifact-kit, path: text, t: artifact-time): unit {
  tie _Artifact-Kit(ref) = k;
  core.cell.mutate(ref, function (dict) {
    box {
      letbox dict = dict;
      letbox path = quote {path};
      letbox t = quote {t};
      core.dictionary.make-insert(core.text.ord.as-ord)(dict, path, t)
    }
  })
}
