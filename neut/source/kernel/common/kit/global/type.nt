import {
  core.cell {make-cell, mutate},
  core.dictionary {dictionary, empty, make-insert},
  this.language.common.definite-description {definite-description, ord-dd},
  this.language.weak-term.weak-term {weak-term},
}

data type-kit {
| _Type-Kit(type-env-cell: cell(dictionary(definite-description, weak-term)))
}

define make-type-kit(): type-kit {
  let type-env-cell = make-cell(box {empty});
  _Type-Kit of {type-env-cell}
}

define insert(k: &type-kit, dd: meta definite-description, v: meta weak-term): unit {
  tie _Type-Kit of {type-env-cell} = k;
  mutate(type-env-cell, function (dict) {
    box {
      letbox dict = dict;
      let insert = make-insert(ord-dd);
      letbox dd = dd;
      letbox v = v;
      insert(dict, dd, v)
    }
  })
}
