import {
  this.app.app {app},
  this.syntax-tree.comment {comment},
  zonk.parse {parsed, zonk},
  zonk.zonk-kit {zonk-kit},
}

define is-non-symbol-char(r: rune): bool {
  match r {
  | `=` =>
    True
  | `(` =>
    True
  | `)` =>
    True
  | ` ` =>
    True
  | `\`` =>
    True
  | `"` =>
    True
  | `\n` =>
    True
  | `\t` =>
    True
  | `:` =>
    True
  | `;` =>
    True
  | `,` =>
    True
  | `<` =>
    True
  | `>` =>
    True
  | `[` =>
    True
  | `]` =>
    True
  | `{` =>
    True
  | `}` =>
    True
  | `/` =>
    True
  | `*` =>
    True
  | `|` =>
    True
  | `&` =>
    True
  | `?` =>
    True
  | _ =>
    False
  }
}

define skip-space<r := rho>(k: &zonk-kit): parsed(unit) {
  try _ = r;
  try _ =
    zonk.parse.take-while(function (r) {
      match r {
      | ` ` =>
        True
      | `\n` =>
        True
      | _ =>
        False
      }
    })(k);
  Right(Unit)
}

define skip-space-without-newline<r := rho>(k: &zonk-kit): parsed(unit) {
  try _ = r;
  try _ =
    zonk.parse.take-while(function (r) {
      eq-rune(r, ` `)
    })(k);
  Right(Unit)
}
